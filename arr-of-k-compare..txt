class Solution {
public:
    int N,M,K;
    int MOD = 1e9 + 7;
    int dp[51][51][101];

    int solve(int index,int search_cost,int maxi){
        if(index == N){
            if(search_cost == K)
                return 1;
            return 0;
        }

        if(dp[index][search_cost][maxi] != -1)
            return dp[index][search_cost][maxi];

        int result{0};

        for(int i{1}; i <= M; i++){
            if(i>maxi)
                result = (result + solve(index+1, search_cost+1, i)) % MOD;
            else
                result = (result + solve(index+1, search_cost, maxi)) % MOD;
        }

        return dp[index][search_cost][maxi] = result % MOD;
    }
    int numOfArrays(int n, int m, int k) {
        N = n;
        M = m;
        K = k;

        memset(dp,-1,sizeof(dp));
        
        return solve(0,0,0);
    }
};