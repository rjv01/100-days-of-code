/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) {
        if(root == nullptr) return 0;
        if(root->left == nullptr and root->right == nullptr) return 1;
        if(root->left == nullptr) return 1+minDepth(root->right);
        if(root->right == nullptr) return 1+minDepth(root->left);

        return min(minDepth(root->left),minDepth(root->right))+1;
    }
};
// Memory Efficient
// class Solution {
// public:
//     int sol(TreeNode *root){
//         if(root == nullptr) return 1e9;
//         if(root->left == nullptr and root->right == nullptr) return 1;
//         return 1 + min(sol(root->left),sol(root->right));
//     }
//     int minDepth(TreeNode* root) {
//         if(root == nullptr) return 0;
//         int ans = sol(root);
//         return ans == 1e9?0:ans;
//     }
// };

