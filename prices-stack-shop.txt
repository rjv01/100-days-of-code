class Solution {
public:
    vector<int> finalPrices(vector<int>& prices) {
        //Stack O(N);
        stack<int> st;
        int n = prices.size();
        vector<int> ans = prices;
        for(int i{0};i<n;i++){

            while(!(st.empty()) and ( prices[st.top()] >= prices[i] )){
                ans[st.top()] = prices[st.top()] - prices[i];
                st.pop();
            }
            st.push(i);
        }
        return ans;
        //Brute force O(N2);
        // vector<int> v;
        // int n = prices.size();
        // for(int i{0};i<n;i++){
        //     int dis{0};
        //     for(int j{i+1};j<n;j++){
        //         if(prices[j]<=prices[i]){
        //             dis = prices[j];
        //             break;
        //         }
        //     }
        //     v.push_back(prices[i]-dis);
        // }
        // return v;
    }
};
