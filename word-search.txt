class Solution {
public:
    int row,col,len;
    vector<vector<int> > directions{ {-1,0}, {1,0} , {0,1} , {0,-1} };

    bool find(vector<vector<char>>& board,int i,int j,int index,string &word){
        if(index >= len)
            return true;

        if(i<0 or j<0 or i>= row or j>= col or board[i][j] != word[index])
            return false;

        char temp = board[i][j];
        board[i][j] = '$';

        for(auto &dir:directions){
            int newI = i + dir[0];
            int newJ = j + dir[1];
            if(find( board, newI, newJ, index+1, word)) 
                return true;
        }

        board[i][j] = temp;
        return false;
    }
    
    bool exist(vector<vector<char>>& board, string word) {
        row = board.size();
        col = board[0].size();
        len = word.size();

        if(row*col < len)
            return false;

        for(int i{0};i<row;i++){
            for(int j{0};j<col;j++){
                if(board[i][j] == word[0] and find(board,i,j,0,word))
                    return true;
            }
        }
        return false;
    }
};