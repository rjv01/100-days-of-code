/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> v;

    void inorder(TreeNode *root){
        if(root != nullptr){
            inorder(root->left);
            v.push_back(root->val);
            inorder(root->right);
        }
    }
    TreeNode* increasingBST(TreeNode* root) {
        if(root == nullptr) return root;
        inorder(root);

        TreeNode *newNode = new TreeNode(v[0],nullptr,nullptr);
        TreeNode *temp = newNode;

        for(int i{1};i<v.size();i++){
            TreeNode *node = new TreeNode(v[i]);
            temp->right = node;
            temp = temp->right;
        }
        return newNode;
    }
};