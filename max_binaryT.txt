/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode *binaryt(vector<int> &nums,int start,int end){
        if(start>end)
            return nullptr;
        int curr = start;
        for(int i{curr+1};i<=end;i++){
            if(nums[i]>nums[curr])
            curr = i;
        }
        TreeNode *root = new TreeNode(nums[curr]);
        root->left=binaryt(nums,start,curr-1);
        root->right=binaryt(nums,curr+1,end);
        return root;
    }
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        return binaryt(nums,0,nums.size()-1);
    }
};