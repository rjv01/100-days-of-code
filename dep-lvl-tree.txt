/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int deepestLeavesSum(TreeNode* root) {
        int sum{0};
        queue<TreeNode*> q;
        if(root == nullptr){
            return 0;
        }
        q.push(root);
        while(!q.empty()){
            sum=0;
            queue<TreeNode*> temp;

            while(!q.empty()){
                TreeNode *front = q.front();
                q.pop();
                sum+=front->val;

                if(front->right) temp.push(front->right);
                if(front->left) temp.push(front->left);
            }
            q=temp;
        }
        return sum;
    }
};