/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapNodes(ListNode* head, int k) {
        if(head == nullptr) return head;

        vector<int> v;

        ListNode *temp = head;
        while(temp!=nullptr){
            v.push_back(temp->val);
            temp = temp->next;
        }
        
        int n = v.size();
        int i = k-1;
        int j = n-k;
        if(i != j){
            swap(v[i],v[j]);
        }

        
        ListNode *HEAD = new ListNode(v[0]);
        ListNode *curr = HEAD;
        for(int i{1};i<n;i++){
            curr->next = new ListNode(v[i]);
            curr = curr->next;
        }
        return HEAD;
    }
};